#!/usr/bin/env python3
"""
Script para testar a URL correta de cria√ß√£o de vaga
Execute: python3 teste_url_correta.py
"""

import requests
import json

def test_correct_vacancy_url():
    base_url = "https://rh.institutoacqua.org.br"
    
    print("üß™ TESTE COM URL CORRETA DE CRIA√á√ÉO DE VAGA")
    print("=" * 50)
    
    # 1. Testar URL correta
    print("1. Testando URL correta: /vacancies/vacancy/create/")
    try:
        response = requests.get(f"{base_url}/vacancies/vacancy/create/")
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ URL correta acess√≠vel!")
            
            # Verificar se tem CSRF token
            csrf_token = None
            for line in response.text.split('\n'):
                if 'csrfmiddlewaretoken' in line and 'value=' in line:
                    csrf_token = line.split('value="')[1].split('"')[0]
                    break
            
            if csrf_token:
                print(f"‚úÖ CSRF token encontrado: {csrf_token[:20]}...")
            else:
                print("‚ùå CSRF token n√£o encontrado")
                
        elif response.status_code == 302:
            print("‚ö†Ô∏è Redirecionamento (provavelmente para login)")
            print(f"Location: {response.headers.get('Location', 'N/A')}")
        elif response.status_code == 403:
            print("‚ùå Erro 403 - Problema de CSRF ou permiss√£o")
        else:
            print(f"‚ùå Erro inesperado: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erro de conex√£o: {e}")
    
    print("\n2. Testando URL incorreta: /vacancies/create/")
    try:
        response = requests.get(f"{base_url}/vacancies/create/")
        print(f"Status: {response.status_code}")
        
        if response.status_code == 404:
            print("‚úÖ Confirmado: URL incorreta retorna 404")
        else:
            print(f"‚ùì Status inesperado: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erro de conex√£o: {e}")
    
    print("\n3. Testando p√°gina de gest√£o de vagas")
    try:
        response = requests.get(f"{base_url}/vacancies/recruiter/gestao-vagas/")
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ P√°gina de gest√£o acess√≠vel")
        elif response.status_code == 302:
            print("‚ö†Ô∏è Redirecionamento (provavelmente para login)")
        else:
            print(f"‚ùå Erro: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erro de conex√£o: {e}")
    
    print("\n‚úÖ Teste conclu√≠do!")
    print("\nüéØ CONCLUS√ÉO:")
    print("A URL correta para cria√ß√£o de vaga √©:")
    print("https://rh.institutoacqua.org.br/vacancies/vacancy/create/")

if __name__ == "__main__":
    test_correct_vacancy_url()
