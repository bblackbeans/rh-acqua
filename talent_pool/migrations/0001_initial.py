# Generated by Django 4.2.10 on 2025-06-09 19:26

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SavedSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('query_params', models.JSONField(verbose_name='Parâmetros da Busca')),
                ('is_public', models.BooleanField(default=False, verbose_name='Pública')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Busca Salva',
                'verbose_name_plural': 'Buscas Salvas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('color', models.CharField(default='#3498db', max_length=7, verbose_name='Cor')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Talent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('available', 'Disponível'), ('considering', 'Considerando Oportunidades'), ('not_available', 'Indisponível'), ('hired', 'Contratado')], default='available', max_length=20, verbose_name='Status')),
                ('source', models.CharField(choices=[('application', 'Candidatura Anterior'), ('referral', 'Indicação'), ('linkedin', 'LinkedIn'), ('recruitment', 'Recrutamento Ativo'), ('event', 'Evento'), ('other', 'Outro')], default='application', max_length=20, verbose_name='Origem')),
                ('notes_content', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('salary_expectation_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Expectativa Salarial Mínima')),
                ('salary_expectation_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Expectativa Salarial Máxima')),
                ('available_start_date', models.DateField(blank=True, null=True, verbose_name='Data de Disponibilidade')),
                ('last_contact_date', models.DateField(blank=True, null=True, verbose_name='Data do Último Contato')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Talento',
                'verbose_name_plural': 'Talentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TalentNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Anotação sobre Talento',
                'verbose_name_plural': 'Anotações sobre Talentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TalentPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Banco de Talentos',
                'verbose_name_plural': 'Bancos de Talentos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TalentRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('contacted', 'Contatado'), ('interested', 'Interessado'), ('not_interested', 'Não Interessado'), ('applied', 'Candidatou-se')], default='pending', max_length=20, verbose_name='Status')),
                ('notes_content', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('match_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Pontuação de Compatibilidade')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Recomendação de Talento',
                'verbose_name_plural': 'Recomendações de Talentos',
                'ordering': ['-match_score'],
            },
        ),
        migrations.CreateModel(
            name='TalentSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Nível de Proficiência')),
                ('years_experience', models.DecimalField(decimal_places=1, default=0, max_digits=4, verbose_name='Anos de Experiência')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Habilidade Principal')),
            ],
            options={
                'verbose_name': 'Habilidade do Talento',
                'verbose_name_plural': 'Habilidades dos Talentos',
            },
        ),
        migrations.CreateModel(
            name='TalentTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Adição')),
            ],
            options={
                'verbose_name': 'Tag do Talento',
                'verbose_name_plural': 'Tags dos Talentos',
            },
        ),
    ]
