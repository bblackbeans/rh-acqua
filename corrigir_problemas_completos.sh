#!/bin/bash

echo "üîß CORRIGINDO TODOS OS PROBLEMAS IDENTIFICADOS"
echo "=============================================="

echo ""
echo "1Ô∏è‚É£ CORRIGINDO CSRF_TRUSTED_ORIGINS"
echo "=================================="

# Verificar configura√ß√£o atual
echo "üìã Configura√ß√£o atual:"
grep "CSRF_TRUSTED_ORIGINS" .env

# Corrigir CSRF_TRUSTED_ORIGINS
echo ""
echo "üîê Corrigindo CSRF_TRUSTED_ORIGINS..."

# Remover linha atual se existir
sed -i '/^CSRF_TRUSTED_ORIGINS=/d' .env

# Adicionar configura√ß√£o correta
echo "CSRF_TRUSTED_ORIGINS=https://rh.institutoacqua.org.br,http://rh.institutoacqua.org.br,https://158.220.108.114:8000,http://158.220.108.114:8000,http://localhost:8000,http://127.0.0.1:8000" >> .env

echo "‚úÖ CSRF_TRUSTED_ORIGINS corrigido"

echo ""
echo "2Ô∏è‚É£ VERIFICANDO PADR√ïES DE URL"
echo "============================="

# Verificar se o arquivo urls.py existe e tem as rotas corretas
if [ -f "vacancies/urls.py" ]; then
    echo "‚úÖ Arquivo vacancies/urls.py encontrado"
    echo "üìã Verificando rotas de cria√ß√£o de vaga..."
    
    if grep -q "create" vacancies/urls.py; then
        echo "‚úÖ Rota 'create' encontrada em vacancies/urls.py"
    else
        echo "‚ùå Rota 'create' N√ÉO encontrada em vacancies/urls.py"
    fi
    
    if grep -q "VacancyCreateView" vacancies/urls.py; then
        echo "‚úÖ VacancyCreateView encontrada em vacancies/urls.py"
    else
        echo "‚ùå VacancyCreateView N√ÉO encontrada em vacancies/urls.py"
    fi
else
    echo "‚ùå Arquivo vacancies/urls.py n√£o encontrado"
fi

echo ""
echo "3Ô∏è‚É£ VERIFICANDO CONFIGURA√á√ïES DO DJANGO"
echo "======================================"

# Verificar se DEBUG est√° True (para ver erros detalhados)
if grep -q "DEBUG=True" .env; then
    echo "‚úÖ DEBUG=True (bom para debug)"
else
    echo "‚ö†Ô∏è DEBUG n√£o est√° True"
fi

echo ""
echo "4Ô∏è‚É£ VERIFICANDO ARQUIVOS EST√ÅTICOS"
echo "================================="

# Verificar se os arquivos est√°ticos foram coletados
if [ -d "staticfiles" ]; then
    echo "‚úÖ Diret√≥rio staticfiles existe"
    if [ -f "staticfiles/img/favicon.ico" ]; then
        echo "‚úÖ favicon.ico existe"
    else
        echo "‚ùå favicon.ico n√£o existe (pode causar erros 404)"
    fi
else
    echo "‚ùå Diret√≥rio staticfiles n√£o existe"
fi

echo ""
echo "5Ô∏è‚É£ COMANDOS PARA EXECUTAR COM SUDO"
echo "=================================="

echo "Execute estes comandos para corrigir os problemas:"
echo ""
echo "# 1. Reiniciar containers para aplicar mudan√ßas de CSRF"
echo "sudo docker-compose restart"
echo ""
echo "# 2. Coletar arquivos est√°ticos"
echo "sudo docker exec rh-acqua-web-1 python manage.py collectstatic --noinput"
echo ""
echo "# 3. Verificar logs do container ap√≥s restart"
echo "sudo docker logs rh-acqua-web-1 --tail 20"
echo ""
echo "# 4. Verificar se o container est√° saud√°vel"
echo "sudo docker ps --filter 'name=rh-acqua-web-1'"
echo ""
echo "# 5. Testar URL correta da cria√ß√£o de vaga"
echo "curl -I https://rh.institutoacqua.org.br/vacancies/vacancy/create/"

echo ""
echo "6Ô∏è‚É£ URLS CORRETAS PARA TESTAR"
echo "============================"

echo "Baseado no erro, a URL correta parece ser:"
echo "‚úÖ https://rh.institutoacqua.org.br/vacancies/vacancy/create/"
echo ""
echo "URLs que retornaram 404:"
echo "‚ùå https://rh.institutoacqua.org.br/vacancies/create/"

echo ""
echo "‚úÖ Script de corre√ß√£o conclu√≠do!"
echo ""
echo "üéØ PR√ìXIMOS PASSOS:"
echo "1. Execute os comandos sudo acima"
echo "2. Teste a URL correta: /vacancies/vacancy/create/"
echo "3. Verifique se o container fica saud√°vel"
