#!/bin/bash

# Script para corre√ß√£o definitiva - colocar arquivos no local correto
# Execute como root: sudo bash corrigir_definitivo.sh

echo "=== Corre√ß√£o Definitiva do Nginx ==="

if [ "$EUID" -ne 0 ]; then
    echo "‚ùå Execute como root: sudo bash corrigir_definitivo.sh"
    exit 1
fi

# O nginx est√° procurando includes em:
# include conf.d/users/institutoacquaor/rh.institutoacqua.org.br/*.conf;

# Vamos criar o arquivo no local correto
INCLUDE_DIR="/etc/nginx/conf.d/users/institutoacquaor/rh.institutoacqua.org.br"

echo "üìÅ Criando diret√≥rio: $INCLUDE_DIR"
mkdir -p "$INCLUDE_DIR"

# Criar configura√ß√£o no local que o nginx est√° procurando
echo "üìù Criando configura√ß√£o de proxy no local correto..."
cat > "$INCLUDE_DIR/django_proxy.conf" << 'EOF'
# Sobrescrever location / para fazer proxy para Django
location / {
    # Proxy para aplica√ß√£o Django na porta 8000
    proxy_pass http://127.0.0.1:8000;
    
    # Headers necess√°rios
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    
    # Configura√ß√µes de timeout
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    proxy_buffering off;
    
    # Desabilitar cache
    proxy_cache off;
    proxy_no_cache 1;
    proxy_cache_bypass 1;
    
    proxy_redirect off;
}

# Servir arquivos est√°ticos diretamente (melhor performance)
location /static/ {
    alias /home/institutoacquaor/public_html/rh-acqua/staticfiles/;
    expires 30d;
    add_header Cache-Control "public, immutable";
    access_log off;
}

# Servir arquivos de m√≠dia diretamente
location /media/ {
    alias /home/institutoacquaor/public_html/rh-acqua/media/;
    expires 7d;
    add_header Cache-Control "public";
    access_log off;
}
EOF

echo "‚úÖ Configura√ß√£o criada em: $INCLUDE_DIR/django_proxy.conf"

# Testar configura√ß√£o
echo "üîç Testando configura√ß√£o nginx..."
nginx -t

if [ $? -eq 0 ]; then
    echo "‚úÖ Configura√ß√£o nginx v√°lida"
    
    # Recarregar nginx
    echo "üîÑ Recarregando nginx..."
    systemctl reload nginx
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Nginx recarregado com sucesso"
        
        # Aguardar um pouco para propaga√ß√£o
        sleep 5
        
        # Testar dom√≠nio
        echo "üîç Testando dom√≠nio rh.institutoacqua.org.br..."
        
        # Teste completo
        RESPONSE=$(curl -s -I http://rh.institutoacqua.org.br/ 2>/dev/null)
        echo "--- Resposta do dom√≠nio ---"
        echo "$RESPONSE" | head -5
        
        # Verificar se Django est√° ativo
        if echo "$RESPONSE" | grep -q "Server: gunicorn"; then
            echo ""
            echo "üéâ SUCESSO TOTAL! Django funcionando via dom√≠nio"
            echo "‚úÖ rh.institutoacqua.org.br ‚Üí Django ativo"
            echo "üåê Acesse: http://rh.institutoacqua.org.br/"
        elif echo "$RESPONSE" | grep -q "302\|301"; then
            echo ""
            echo "‚ö†Ô∏è Dom√≠nio redirecionando (possivelmente Django)"
            echo "Teste diretamente no navegador: http://rh.institutoacqua.org.br/"
        elif echo "$RESPONSE" | grep -q "200"; then
            echo ""
            echo "‚ö†Ô∏è Dom√≠nio responde mas verificar no navegador"
            echo "Pode estar funcionando mas headers diferentes"
        else
            echo ""
            echo "‚ùå Dom√≠nio ainda n√£o funcionando corretamente"
        fi
        
        # Teste adicional - verificar conte√∫do
        echo ""
        echo "üß™ Teste adicional - verificando conte√∫do..."
        CONTENT_TEST=$(curl -s http://rh.institutoacqua.org.br/ 2>/dev/null | head -c 100)
        
        if echo "$CONTENT_TEST" | grep -q "RH\|Django\|login\|HTML\|DOCTYPE"; then
            echo "‚úÖ Conte√∫do parece ser da aplica√ß√£o Django"
        else
            echo "‚ö†Ô∏è Conte√∫do pode ainda ser listagem de arquivos"
        fi
        
    else
        echo "‚ùå Erro ao recarregar nginx"
        journalctl -u nginx --no-pager -n 5
    fi
else
    echo "‚ùå Erro na configura√ß√£o nginx"
    nginx -t
fi

echo ""
echo "=== Corre√ß√£o Definitiva Finalizada ==="
echo "üìÅ Configura√ß√£o em: $INCLUDE_DIR/django_proxy.conf"
echo "üåê Teste: http://rh.institutoacqua.org.br/"
