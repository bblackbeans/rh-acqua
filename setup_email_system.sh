#!/bin/bash

# Script de configura√ß√£o do Sistema de Email - RH Acqua
# Este script configura o sistema de email com configura√ß√µes b√°sicas

echo "üöÄ Configurando Sistema de Email - RH Acqua"
echo "=============================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "manage.py" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do projeto Django"
    exit 1
fi

# Verificar se o Python est√° dispon√≠vel
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Erro: Python3 n√£o encontrado"
    exit 1
fi

echo "‚úÖ Ambiente verificado"

# Aplicar migra√ß√µes
echo "üì¶ Aplicando migra√ß√µes..."
python3 manage.py migrate email_system

if [ $? -eq 0 ]; then
    echo "‚úÖ Migra√ß√µes aplicadas com sucesso"
else
    echo "‚ùå Erro ao aplicar migra√ß√µes"
    exit 1
fi

# Criar templates padr√£o
echo "üìù Criando templates de email padr√£o..."
python3 manage.py create_default_email_templates

if [ $? -eq 0 ]; then
    echo "‚úÖ Templates criados com sucesso"
else
    echo "‚ùå Erro ao criar templates"
    exit 1
fi

# Solicitar configura√ß√µes SMTP
echo ""
echo "üìß Configura√ß√£o SMTP"
echo "===================="
echo "Para configurar o sistema de email, voc√™ precisa fornecer:"
echo ""

read -p "Servidor SMTP (padr√£o: smtp.gmail.com): " SMTP_HOST
SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}

read -p "Porta SMTP (padr√£o: 587): " SMTP_PORT
SMTP_PORT=${SMTP_PORT:-587}

read -p "Usu√°rio SMTP: " SMTP_USERNAME
if [ -z "$SMTP_USERNAME" ]; then
    echo "‚ùå Usu√°rio SMTP √© obrigat√≥rio"
    exit 1
fi

read -s -p "Senha SMTP: " SMTP_PASSWORD
echo ""
if [ -z "$SMTP_PASSWORD" ]; then
    echo "‚ùå Senha SMTP √© obrigat√≥ria"
    exit 1
fi

read -p "Email remetente: " FROM_EMAIL
if [ -z "$FROM_EMAIL" ]; then
    echo "‚ùå Email remetente √© obrigat√≥rio"
    exit 1
fi

read -p "Nome do remetente (padr√£o: RH Acqua): " FROM_NAME
FROM_NAME=${FROM_NAME:-RH Acqua}

# Criar configura√ß√£o SMTP
echo "‚öôÔ∏è Criando configura√ß√£o SMTP..."
python3 manage.py create_default_smtp_config \
    --host "$SMTP_HOST" \
    --port "$SMTP_PORT" \
    --username "$SMTP_USERNAME" \
    --password "$SMTP_PASSWORD" \
    --from-email "$FROM_EMAIL" \
    --from-name "$FROM_NAME"

if [ $? -eq 0 ]; then
    echo "‚úÖ Configura√ß√£o SMTP criada com sucesso"
else
    echo "‚ùå Erro ao criar configura√ß√£o SMTP"
    exit 1
fi

# Testar processamento da fila
echo "üß™ Testando processamento da fila..."
python3 manage.py process_email_queue --limit 5

if [ $? -eq 0 ]; then
    echo "‚úÖ Processamento da fila funcionando"
else
    echo "‚ö†Ô∏è Aviso: Problema no processamento da fila (pode ser normal se n√£o houver emails)"
fi

echo ""
echo "üéâ Sistema de Email configurado com sucesso!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Acesse o dashboard: /email-system/"
echo "2. Configure templates adicionais em: /admin/email_system/"
echo "3. Configure um cron job para processar emails automaticamente:"
echo "   */5 * * * * cd $(pwd) && python3 manage.py process_email_queue --limit 20"
echo ""
echo "üìö Documenta√ß√£o completa: SISTEMA_EMAIL_README.md"
echo ""
echo "üîß Comandos √∫teis:"
echo "- Processar fila: python3 manage.py process_email_queue"
echo "- Testar email: python3 manage.py shell (use EmailTriggerService)"
echo "- Ver logs: /email-system/logs/"
echo ""
echo "‚ú® Sistema pronto para uso!"
