from django.core.management.base import BaseCommand
from vacancies.models import Hospital, Department


class Command(BaseCommand):
    help = 'Cria departamentos para os hospitais existentes'

    def handle(self, *args, **options):
        self.stdout.write('Criando departamentos para os hospitais...')
        
        # Hospital Santa Clara (S√£o Paulo)
        hospital_sp = Hospital.objects.get(name='Hospital Santa Clara')
        
        departments_sp = [
            {
                'name': 'Centro Cir√∫rgico',
                'description': 'Departamento respons√°vel por procedimentos cir√∫rgicos'
            },
            {
                'name': 'UTI',
                'description': 'Unidade de Terapia Intensiva para pacientes cr√≠ticos'
            },
            {
                'name': 'Enfermagem',
                'description': 'Departamento de enfermagem geral'
            },
            {
                'name': 'Medicina Interna',
                'description': 'Departamento de medicina interna e cl√≠nica m√©dica'
            },
            {
                'name': 'Pediatria',
                'description': 'Departamento especializado em cuidados infantis'
            },
            {
                'name': 'Cardiologia',
                'description': 'Departamento de cardiologia e cirurgia card√≠aca'
            },
            {
                'name': 'Neurologia',
                'description': 'Departamento de neurologia e neurocirurgia'
            },
            {
                'name': 'Ortopedia',
                'description': 'Departamento de ortopedia e traumatologia'
            },
            {
                'name': 'Radiologia',
                'description': 'Departamento de diagn√≥stico por imagem'
            },
            {
                'name': 'Laborat√≥rio',
                'description': 'Departamento de an√°lises cl√≠nicas'
            },
            {
                'name': 'Farm√°cia',
                'description': 'Departamento farmac√™utico hospitalar'
            },
            {
                'name': 'Administra√ß√£o',
                'description': 'Departamento administrativo e gest√£o'
            }
        ]
        
        for dept_data in departments_sp:
            dept, created = Department.objects.get_or_create(
                hospital=hospital_sp,
                name=dept_data['name'],
                defaults={'description': dept_data['description']}
            )
            if created:
                self.stdout.write(f'‚úÖ Criado: {dept.name} - {hospital_sp.name}')
            else:
                self.stdout.write(f'‚ö†Ô∏è  J√° existe: {dept.name} - {hospital_sp.name}')
        
        # Hospital S√£o Lucas (Rio de Janeiro)
        hospital_rj = Hospital.objects.get(name='Hospital S√£o Lucas')
        
        departments_rj = [
            {
                'name': 'Enfermagem',
                'description': 'Departamento de enfermagem geral'
            },
            {
                'name': 'Centro Cir√∫rgico',
                'description': 'Departamento respons√°vel por procedimentos cir√∫rgicos'
            },
            {
                'name': 'UTI',
                'description': 'Unidade de Terapia Intensiva para pacientes cr√≠ticos'
            },
            {
                'name': 'Emerg√™ncia',
                'description': 'Departamento de emerg√™ncia e urg√™ncia'
            },
            {
                'name': 'Oncologia',
                'description': 'Departamento de oncologia e tratamento do c√¢ncer'
            },
            {
                'name': 'Maternidade',
                'description': 'Departamento de obstetr√≠cia e ginecologia'
            },
            {
                'name': 'Psiquiatria',
                'description': 'Departamento de psiquiatria e sa√∫de mental'
            },
            {
                'name': 'Fisioterapia',
                'description': 'Departamento de fisioterapia e reabilita√ß√£o'
            },
            {
                'name': 'Nutri√ß√£o',
                'description': 'Departamento de nutri√ß√£o cl√≠nica'
            },
            {
                'name': 'Servi√ßo Social',
                'description': 'Departamento de servi√ßo social hospitalar'
            }
        ]
        
        for dept_data in departments_rj:
            dept, created = Department.objects.get_or_create(
                hospital=hospital_rj,
                name=dept_data['name'],
                defaults={'description': dept_data['description']}
            )
            if created:
                self.stdout.write(f'‚úÖ Criado: {dept.name} - {hospital_rj.name}')
            else:
                self.stdout.write(f'‚ö†Ô∏è  J√° existe: {dept.name} - {hospital_rj.name}')
        
        # Hospital Central (Belo Horizonte)
        hospital_mg = Hospital.objects.get(name='Hospital Central')
        
        departments_mg = [
            {
                'name': 'Centro Cir√∫rgico',
                'description': 'Departamento respons√°vel por procedimentos cir√∫rgicos'
            },
            {
                'name': 'UTI',
                'description': 'Unidade de Terapia Intensiva para pacientes cr√≠ticos'
            },
            {
                'name': 'Enfermagem',
                'description': 'Departamento de enfermagem geral'
            },
            {
                'name': 'Medicina Interna',
                'description': 'Departamento de medicina interna e cl√≠nica m√©dica'
            },
            {
                'name': 'Cardiologia',
                'description': 'Departamento de cardiologia e cirurgia card√≠aca'
            },
            {
                'name': 'Neurologia',
                'description': 'Departamento de neurologia e neurocirurgia'
            },
            {
                'name': 'Ortopedia',
                'description': 'Departamento de ortopedia e traumatologia'
            },
            {
                'name': 'Radiologia',
                'description': 'Departamento de diagn√≥stico por imagem'
            },
            {
                'name': 'Laborat√≥rio',
                'description': 'Departamento de an√°lises cl√≠nicas'
            },
            {
                'name': 'Farm√°cia',
                'description': 'Departamento farmac√™utico hospitalar'
            },
            {
                'name': 'Administra√ß√£o',
                'description': 'Departamento administrativo e gest√£o'
            },
            {
                'name': 'Recursos Humanos',
                'description': 'Departamento de gest√£o de pessoas'
            },
            {
                'name': 'TI',
                'description': 'Departamento de tecnologia da informa√ß√£o'
            },
            {
                'name': 'Manuten√ß√£o',
                'description': 'Departamento de manuten√ß√£o predial'
            },
            {
                'name': 'Limpeza',
                'description': 'Departamento de servi√ßos gerais'
            }
        ]
        
        for dept_data in departments_mg:
            dept, created = Department.objects.get_or_create(
                hospital=hospital_mg,
                name=dept_data['name'],
                defaults={'description': dept_data['description']}
            )
            if created:
                self.stdout.write(f'‚úÖ Criado: {dept.name} - {hospital_mg.name}')
            else:
                self.stdout.write(f'‚ö†Ô∏è  J√° existe: {dept.name} - {hospital_mg.name}')
        
        self.stdout.write(
            self.style.SUCCESS(
                f'\nüéâ Departamentos criados com sucesso!\n'
                f'Total de departamentos no sistema: {Department.objects.count()}'
            )
        ) 